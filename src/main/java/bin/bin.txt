/*
* /*@Override public void handleUserAudio(@Nonnull UserAudio userAudio) {
* GuildVoiceState voiceState = msgEvent.getEvent().getMember().getVoiceState();
*
* if (userAudio.getUser().equals(msgEvent.getEvent().getAuthor())) {
* guild.getAudioManager();
*
* rescievedBytes.add(userAudio.getAudioData(1.5f));// 1.0 â†’ 100%
*
* if (talkingMembersCount.size() > MAX_VALUE) { if (isAllowedToCarryOn &&
* haveUsersStoppedTalking(talkingMembersCount)) { try {
*
* // System.out.println(combinedAudio.getUsers().size()); int size = 0; for
* (byte[] bs : rescievedBytes) { size += bs.length; } byte[] decodedData = new
* byte[size]; int i = 0; for (byte[] bs : rescievedBytes) { for (int j = 0; j <
* bs.length; j++) { decodedData[i++] = bs[j]; } }
*
* SoundFile.setTitle(msgEvent.getEvent().getGuild().getId());
*
* File file = new File(SoundFile.getWholePath());
*
* getWavFile(file, decodedData); SpeechToText StT = new SpeechToText(); String
* transcription = StT.getTranscription();
* guild.getTextChannelById(CurrentTextChannel.getId()).sendMessage(
* transcription).queue(); if
* (!((SpeechToText.Language.getLang().equals("en-GB") ||
* SpeechToText.Language.getLang().equals("en-US")))) { transcription =
* LibraryClass.runPyScript(ScriptPathPointer.translator, transcription);
* guild.getTextChannelById(CurrentTextChannel.getId()).sendMessage(
* transcription).queue(); }
*
* System.out.println(transcription); // CurrentTextChannel ctch = new
* CurrentTextChannel();
*
* SpeechToText.setText(transcription); ListeningCommandManager
* listeningCommandManager = new ListeningCommandManager();
*
* IListeningCommands command =
* listeningCommandManager.getCommand(transcription); if (command != null)
* command.doTask(msgEvent.getEvent());
*
* else {
*
* msgEvent.getEvent().getMessage().reply(
* "There's been an error\nCommand either does not exist or I couldn't understand you"
* ) .queue(); }
*
* // audioManager.closeAudioConnection(); if
* (haveUsersStoppedTalking(talkingMembersCount)) isAllowedToCarryOn = false;
*
* System.out.println("its done aint it"); } catch (Exception e) {
* System.out.println(e); }
*
* } } }
*
* }
*/S